@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Log in";
}

<div class="container">
    <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="col s12" style="max-width: 500px" role="form">
        <h4>Use a local account to log in</h4>
        <div class="rows s6">
            <div class="input-field col s12">
                <i class="material-icons prefix">account_circle</i>
                <input asp-for="Email" class="validate">
                <label asp-for="Email">Email</label>
            </div>
        </div>
        <div class="row s6">
            <div class="input-field col s12">
                <i class="material-icons prefix">vpn_key</i>
                <input asp-for="Password"  class="validate">
                <label asp-for="Password">Password</label>
            </div>
        </div>
        <div class="row s6">
            <div class="checkbox">
                <input asp-for="RememberMe" />
                <label asp-for="RememberMe">Remember</label>
            </div>
        </div>
        <div>
            <button class="waves-effect waves-light btn" type="submit">Log in</button>
        </div>
        <p>
            <a asp-action="Register">Register as a new user?</a>
        </p>
        <p>
            <a asp-action="ForgotPassword">Forgot your password?</a>
        </p>

        <div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>
    </form>
    @*<div class="col-md-4">
        <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
                var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
                if (loginProviders.Count == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal" role="form">
                        <div>
                            <p>
                                @foreach (var provider in loginProviders)
                                {
                                    <button type="submit" class="btn btn-default" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">@provider.AuthenticationScheme</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>*@
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
